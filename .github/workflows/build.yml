name: C++ Build and Release Pipeline
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Build Linux Application
        run: |
          echo "Starting Linux application build..."
          g++ src/*.cpp -I./include -o dac_app_linux -Wall -Wextra -O3
          echo "Linux build finished"
      
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: dac-executable-linux
          path: ./dac_app_linux
          retention-days: 7

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
      
      - name: Build Windows Application
        run: |
          echo "Starting Windows application build..."
          cl.exe /EHsc /W4 /O2 /I"./include" /Fedac_app_windows.exe src/*.cpp
          echo "Windows build finished"
      
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: dac-executable-windows
          path: ./dac_app_windows.exe
          retention-days: 7

  create-release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: dac-executable-linux
      
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: dac-executable-windows
      
      - name: Get current date
        id: date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dac_app_linux
            ./dac_app_windows.exe
          tag_name: v${{ steps.date.outputs.DATE }}
          name: Release ${{ steps.date.outputs.DATE }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_PAT }}
